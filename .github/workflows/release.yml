name: Release BINGO Images

on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch:

jobs:
  release-bingo:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install matplotlib pandas

    - name: Generate BINGO Images
      run: |
        mkdir -p release
        python - <<EOF
        import random
        import matplotlib.pyplot as plt
        import pandas as pd
        import os

        def generate_bingo_image(image_id, output_dir="./release"):
            os.makedirs(output_dir, exist_ok=True)
            numbers = random.sample(range(1, 26), 25)
            grid = [numbers[i:i+5] for i in range(0, 25, 5)]
            columns = ['B', 'I', 'N', 'G', 'O']
            df = pd.DataFrame(grid, columns=columns)
            fig, ax = plt.subplots(figsize=(8, 8))
            ax.axis('off')
            table = plt.table(
                cellText=df.values,
                colLabels=df.columns,
                cellLoc='center',
                loc='center',
                bbox=[0, 0, 1, 1]
            )
            table.auto_set_font_size(False)
            table.set_fontsize(14)
            n_rows, n_cols = len(df), len(df.columns)
            for i in range(n_rows + 1):
                for j in range(n_cols):
                    cell = table[(i, j)]
                    cell.set_height(1 / n_rows)
                    cell.set_width(1 / n_cols)
                    cell.set_edgecolor('black')
                    cell.set_linewidth(2)
                    if i == 0:
                        cell.set_text_props(color='red')
                        cell.set_facecolor('white')
            filename = os.path.join(output_dir, f"bingo_{image_id}.png")
            plt.savefig(filename, dpi=300, bbox_inches='tight')
            plt.close()

        for i in range(100):
            generate_bingo_image(i)
        print("Generated 100 images in the ./release folder")
        EOF

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-bingo-${{ github.run_number }}
        release_name: "BINGO Images Release ${{ github.run_number }}"
        draft: false
        prerelease: false

    - name: Upload Each Image
      run: |
        if [ "$(ls -A release)" ]; then
          for file in release/*; do
            echo "Uploading $file"
            UPLOAD_URL="${{ steps.create_release.outputs.upload_url }}"
            FINAL_URL="${UPLOAD_URL%\{?name,label\}}?name=$(basename $file)"
            curl \
              -X POST \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/octet-stream" \
              --data-binary @"$file" \
              "$FINAL_URL"
          done
        else
          echo "No files to upload."
        fi
